----------------------------------------------------------------------------------------------------
module private classes =
-- Data structures (lists, trees).
-- Flex Standard Library
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
class private c_item = 
-- An item storable into a container.
----------------------------------------------------------------------------------------------------
    
    ------------------------------------------------------------------------------------------------
    virtual to_string =
    -- Retrieves the string representation of the item.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end to_string;

    end c_item;



----------------------------------------------------------------------------------------------------
class private c_container = 
-- A generic container of various items.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    virtual insert =
    -- Inserts the given [item] into the container.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end insert;



    ------------------------------------------------------------------------------------------------
    virtual remove =
    -- Removes the given [item] from the container.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end remove;



    ------------------------------------------------------------------------------------------------
    virtual delete =
    -- Removes and discards the given [item] from the container. Sets value of [item] to nil.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end delete;



    ------------------------------------------------------------------------------------------------
    virtual delete_all =
    -- Removes and discards all items in the container.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end delete_all;

    end c_container;



----------------------------------------------------------------------------------------------------
class private c_iterator =
-- Provides iterator capabilities for a container.
----------------------------------------------------------------------------------------------------
    
    ------------------------------------------------------------------------------------------------
    virtual reset =
    -- Resets the iterator, so it can be re-used on top of the same container.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end reset;



    ------------------------------------------------------------------------------------------------
    virtual get =
    -- Retrieves one item from the corresponding container.
    ------------------------------------------------------------------------------------------------
    begin
      raise feature_not_implemented;
      end get;

    end c_iterator;

----------------------------------------------------------------------------------------------------
-- #separate private data_records;
-- Data structures - basic data records.
-- %%TODO(LIB) To be considered.
----------------------------------------------------------------------------------------------------
#separate private lists;
-- Data structures - linked lists.
----------------------------------------------------------------------------------------------------
#separate private trees;
-- Data structures - trees.
----------------------------------------------------------------------------------------------------
#separate private hash_tables;
-- Data structures - hash tables.
----------------------------------------------------------------------------------------------------

end classes;
