----------------------------------------------------------------------------------------------------
module public base_n =
-- Additional character encoders+decoders for Base-16, Base-32, Base-64 data encodings (RFC 3548).
-- Flex Advanced Multi-Platform Library
-- Copyright (C) 1999-2004 A && L soft
----------------------------------------------------------------------------------------------------
-- General module overview:
--
-- This module contains [c_character_transformer] descendant classes that encode/decode data using
-- the Base-16, Base-32, and Base-64 data encodings according to RFC 3548.
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.characters,
  standard.characters.transformers;


-- Forward declarations
class abstract c_base_n_decoder; type p_base_n_decoder = ^class c_base_n_decoder;
class abstract c_base_n_encoder; type p_base_n_encoder = ^class c_base_n_encoder;
class          c_base16_decoder; type p_base16_decoder = ^class c_base16_decoder;
class          c_base16_encoder; type p_base16_encoder = ^class c_base16_encoder;
class          c_base32_decoder; type p_base32_decoder = ^class c_base32_decoder;
class          c_base32_encoder; type p_base32_encoder = ^class c_base32_encoder;
class          c_base64_decoder; type p_base64_decoder = ^class c_base64_decoder;
class          c_base64_encoder; type p_base64_encoder = ^class c_base64_encoder;


----------------------------------------------------------------------------------------------------
class public abstract c_base_n_decoder = extend c_character_transformer;
-- Abstract superclass for character transformers that are able to decode Base-N encoded data.
----------------------------------------------------------------------------------------------------

    --------------------------------------------------------------------------------------------------
    procedure set_error_handling (
        ignore_case  : t_logical:=false;
        ignore_pad   : t_logical:=false;
        ignore_ctrl  : t_logical:=false;
        ignore_chars : t_logical:=false);
    -- Sets which detected errors should be ignored. The rest of errors causes an exception.
    --------------------------------------------------------------------------------------------------

  protected

    -- configuration of the decoder (depending on N)
    var
      lg_n         : t_unsigned;                 -- Binary logarithm of radix N (<=8), e.g. 6 for Base-64
      alphabet     : p_char32ustr;               -- Encoding alphabet.
      padding      : t_char32;                   -- Padding character.
      ignore_case  : t_logical;                  -- T-case should be ignored on input.
      ignore_pad   : t_logical;                  -- T-excess or missing padding should be ignored
      ignore_ctrl  : t_logical;                  -- T-control characters (like CR,LF) should be ignored
      ignore_chars : t_logical;                  -- T-characters outside the alphabet should be ignored

    end c_base_n_decoder;



----------------------------------------------------------------------------------------------------
class public abstract c_base_n_encoder = extend c_character_transformer;
-- Abstract superclass for character transformers that are able to encode data using a Base-N encoding.
----------------------------------------------------------------------------------------------------
  protected

    var
      lg_n         : t_unsigned;                 -- Binary logarithm of radix N (<=8), e.g. 6 for Base-64
      alphabet     : p_char32ustr;               -- Encoding alphabet.
      padding      : t_char32;                   -- Padding character.

    ------------------------------------------------------------------------------------------------
    virtual get_length_of_padding (
      rem_bits     : t_unsigned)
      return t_unsigned;
    -- Compute the length of required padding when [rem_bits] bits are remaining in the buffer.
    -- If a subclass supports padding, it must override this procedure.
    ------------------------------------------------------------------------------------------------

    end c_base_n_encoder;



----------------------------------------------------------------------------------------------------
class public c_base16_decoder = extend c_base_n_decoder;
-- Character transformer that is able to decode Base-16 encoded data.
----------------------------------------------------------------------------------------------------
    end c_base16_decoder;



----------------------------------------------------------------------------------------------------
class public c_base16_encoder = extend c_base_n_encoder;
-- Character transformer that is able to encode data using the Base-16 encoding.
----------------------------------------------------------------------------------------------------
    end c_base16_encoder;



----------------------------------------------------------------------------------------------------
class public c_base32_decoder = extend c_base_n_decoder;
-- Character transformer that is able to decode Base-32 encoded data.
----------------------------------------------------------------------------------------------------
    end c_base32_decoder;



----------------------------------------------------------------------------------------------------
class public c_base32_encoder = extend c_base_n_encoder;
-- Character transformer that is able to encode data using the Base-32 encoding.
----------------------------------------------------------------------------------------------------
    end c_base32_encoder;



----------------------------------------------------------------------------------------------------
class public c_base64_decoder = extend c_base_n_decoder;
-- Character transformer that is able to decode Base-64 encoded data.
----------------------------------------------------------------------------------------------------
    end c_base64_decoder;



----------------------------------------------------------------------------------------------------
class public c_base64_encoder = extend c_base_n_encoder;
-- Character transformer that is able to encode data using the Base-64 encoding.
----------------------------------------------------------------------------------------------------
    end c_base64_encoder;


end base_n;
