----------------------------------------------------------------------------------------------------
module public xml_tokenizer =
-- Advanced Multi-platform Library: XML support
-- XML token reader/writer.
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

with
  standard.characters,
  standard.streams;

type
  t_xml_token      = enum
      xtok_eof;                                  -- end of data, no more tokens will be reported
      xtok_line_end;                             -- end of line
      xtok_start_element_begin;                  -- "<"
      xtok_start_element_end;                    -- "</"
      xtok_start_pi;                             -- "<?"
      xtok_start_comment;                        -- "<!--"
      xtok_start_cdata;                          -- "<![CDATA["
      xtok_end_element;                          -- ">"
      xtok_end_empty_element;                    -- "/>"
      xtok_end_pi;                               -- "?>"
      xtok_end_comment;                          -- "--!>"
      xtok_end_cdata;                            -- "]]!>"
      xtok_name;                                 -- name of an element, attribute, PI or entity
      xtok_eq;                                   -- "="
      xtok_colon;                                -- ":"
      xtok_string;                               -- string (e.g. "value")
      xtok_character;                            -- single character
      xtok_entity;                               -- entity (e.g. "&lt;")
      end enum;

message
  xml_error              : exception;
  xml_token_output_error extend xml_error;

----------------------------------------------------------------------------------------------------
class public c_xml_token_reader =
-- XML token reader.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static init (
        stream     : in p_input_stream;          -- input data stream
        line_ends  : in t_logical := false;      -- T-report line ends
        prefixes   : in t_logical := false);     -- T-separately report name prefixes
    -- Initializes the reader and assigns an input stream to it.
    -- If [prefixes] is True, then a name consisting of several parts separated by colons is 
    -- reported as a sequence of [xtok_name] tokens intermixed with [xtok_colon] tokens.
    ------------------------------------------------------------------------------------------------
    static get_token (
        token      : out t_xml_token);
    -- Reads a token from the input.
    -- The text outside elements, within comments and CDATA sections is reported as a sequence of
    -- [xtok_characters] or [xtok_entity] (in text only) tokens.
    -- Line ends are reported only when requested in the [init] procedure.
    ------------------------------------------------------------------------------------------------
    static unget_token;
    -- Returns the last read token to the input (the reader shifts back one token).
    -- This procedure can't be used recursively, i.e. it is not possible to [get_token] two tokens
    -- and then return them both back with [unget_token].
    ------------------------------------------------------------------------------------------------
    static get_name;
    -- Returns the name associated with the last [xtok_name] or [xtok_entity] token.
    ------------------------------------------------------------------------------------------------
    static get_string;
    -- Returns the value of the string associated with the last [xtok_string] token.
    ------------------------------------------------------------------------------------------------
    static get_character;
    -- Returns the character associated with the last [xtok_character] token.
    ------------------------------------------------------------------------------------------------

    end c_xml_token_reader;

----------------------------------------------------------------------------------------------------
class public c_xml_token_writer =
-- XML token writer.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static init (
        stream     : in p_text_writer);
    -- Initializes the writer and assigns an output stream to it.
    ------------------------------------------------------------------------------------------------
    static put_token (
        token      : in t_xml_token);
    -- Writes a token to the output.
    -- Use following [put_*] procedures to write tokens like [xtok_name], [xtok_string], 
    -- [xtok_entity] and a string of [xtok_character]s. When such token or [xtok_eof] is submited to 
    -- [put_token], [xml_token_output_error] exception is raised.
    --   Line ends are written only when [xtok_line_end] is submited to [put_token] and so do 
    -- whitespaces (for whitespaces use [put_character] instead).
    ------------------------------------------------------------------------------------------------
    static put_name (
        name       : in t_char32ustr);
    -- Writes a name (XTOK_NAME) to the output.
    ------------------------------------------------------------------------------------------------
    static put_string (
        value      : in t_char32ustr);
    -- Writes a string ([xtok_string]) to the output.
    -- [put_string] automatically detects wether to use apostrophees (') or quotes ("). If both are
    -- used in the string, [xml_token_output_error] exception is raised. When neither of the is
    -- present, quotes (") are preferred.
    ------------------------------------------------------------------------------------------------
    static put_attribute (
        name       : in t_char32ustr;            -- the name of the attribute
        value      : in t_char32ustr);           -- the value of the attribute
    -- Writes an attribute in the form " name='value'" to the output.
    -- [put_attribute] outputs a single space character before the actual attribute construction.
    -- It is automatically detected wether to use apostrophees (') or quotes ("). If both are used 
    -- in the value, [xml_token_output_error] exception is raised. When neither of the is present, 
    -- quotes (") are preferred.
    ------------------------------------------------------------------------------------------------
    static put_entity (
        name       : in t_char32ustr);
    -- Writes an entity ([xtok_entity]) to the output.
    ------------------------------------------------------------------------------------------------
    static put_character (
        value      : in t_char32);
    -- Writes a character to the output.
    ------------------------------------------------------------------------------------------------
    static put_characters (
        value      : in t_char32ustr);
    -- Writes a string of characters to the output.
    ------------------------------------------------------------------------------------------------

    end c_xml_token_writer;

----------------------------------------------------------------------------------------------------
procedure xml_is_whitespace (
    token          : in t_char32ustr)
                   return t_logical;
-- True, if given [token] is a whitespace.
----------------------------------------------------------------------------------------------------
procedure xml_is_name (
    token          : in t_char32ustr)
                   return t_logical;
-- True, if given [token] is a Name.
----------------------------------------------------------------------------------------------------
procedure xml_is_nmtoken (
    token          : in t_char32ustr)
                   return t_logical;
-- True, if given [token] is an Nmtoken.
----------------------------------------------------------------------------------------------------

end xml_tokenizer;