----------------------------------------------------------------------------------------------------
module private terminators =
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
class private c_null_input_stream =
----------------------------------------------------------------------------------------------------
var
    null_data      : static const aliased array 1..dp_optimal_packet_size of t_data_byte;
    closed         : t_logical;
    flow           : t_offset;

    ------------------------------------------------------------------------------------------------
    override c_input_stream.close =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      closed:=true;
      end close;



    ------------------------------------------------------------------------------------------------
    override c_input_stream.read_packet =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      create_packet(data,^null_data,dp_optimal_packet_size,t_dps_immortal);
      end read_packet;



    ------------------------------------------------------------------------------------------------
    override c_input_stream.is_eod =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      result:=false;
      end is_eod;
    end c_null_input_stream;



----------------------------------------------------------------------------------------------------
class private c_empty_input_stream =
----------------------------------------------------------------------------------------------------
var
    closed         : t_logical;
    eod            : t_logical;

    ------------------------------------------------------------------------------------------------
    override c_input_stream.close =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      closed:=true;
      end close;



    ------------------------------------------------------------------------------------------------
    override c_input_stream.read_packet =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      if eod then
        raise stream_end_of_data;
        end if;
      eod:=true;
      create_eod(data);
      end read_packet;



    ------------------------------------------------------------------------------------------------
    override c_input_stream.is_eod =
    ------------------------------------------------------------------------------------------------
    begin
      result:=eod;
      end is_eod;
    end c_empty_input_stream;



----------------------------------------------------------------------------------------------------
class private c_null_output_stream = 
----------------------------------------------------------------------------------------------------
var
    closed         : t_logical;
    flow           : t_offset;

    ------------------------------------------------------------------------------------------------
    override c_output_stream.close =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      closed:=true;
      end close;

    
    
    ------------------------------------------------------------------------------------------------
    override c_output_stream.write_packet =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      discard_packet(data);
      end write_packet;

    
    
    
    ------------------------------------------------------------------------------------------------
    override c_output_stream.is_reading =
    ------------------------------------------------------------------------------------------------
    begin
      if closed then
        raise stream_already_closed
        end if;
      result:=true;
      end is_reading;
    end c_null_output_stream;
end terminators;