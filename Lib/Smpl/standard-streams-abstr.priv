----------------------------------------------------------------------------------------------------
class private abstract c_abstract_stream =
-- Abstraktní proud.
----------------------------------------------------------------------------------------------------
  ------------------------------------------------------------------------------------------------
  virtual add_flow =
  ------------------------------------------------------------------------------------------------
  begin
    interlocked_increment(flow,t_unsigned(data.size:unchecked));
    end add_flow;

  
  
  ------------------------------------------------------------------------------------------------
  virtual get_flow =
  ------------------------------------------------------------------------------------------------
  begin
    interlocked_read(flow,t_unsigned(bytes:unchecked));
    end get_flow;



  ------------------------------------------------------------------------------------------------
  virtual set_optimal_packet_size =
  ------------------------------------------------------------------------------------------------
  begin
    optimal_size:=bytes;
    end set_optimal_packet_size;



  ------------------------------------------------------------------------------------------------
  virtual get_optimal_packet_size =
  ------------------------------------------------------------------------------------------------
  begin
    bytes:=optimal_size;
    end get_optimal_packet_size;



  ------------------------------------------------------------------------------------------------
  virtual set_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    lazy_buffer:=lazy;
    end set_lazy_buffer;



  ------------------------------------------------------------------------------------------------
  virtual get_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    lazy:=lazy_buffer;
    end get_lazy_buffer;

  
  
  ------------------------------------------------------------------------------------------------
  entry =
  ------------------------------------------------------------------------------------------------
  begin
    optimal_size:=dp_optimal_packet_size;
    end entry;
    end c_abstract_stream;




----------------------------------------------------------------------------------------------------
class private abstract c_input_stream = 
----------------------------------------------------------------------------------------------------
  end c_input_stream;



----------------------------------------------------------------------------------------------------
class private abstract c_output_stream =
----------------------------------------------------------------------------------------------------
  ------------------------------------------------------------------------------------------------
  virtual write_eod =
  ------------------------------------------------------------------------------------------------
  var
    packet         : t_data_packet;

  begin
    -- vytvorim a zapisu flush packet
    create_eod(packet);
    write_packet(packet);
    end write_eod;



  ------------------------------------------------------------------------------------------------
  virtual flush =
  ------------------------------------------------------------------------------------------------
  var
    packet         : t_data_packet;

  begin
    -- vytvorim a zapisu end of data packet
    create_flush(packet);
    write_packet(packet);
    end flush;



  ------------------------------------------------------------------------------------------------
  override set_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    lazy_buffer:=lazy;
    if lazy_buffer and not lazy then
      flush;
      end if;
    end set_lazy_buffer;
end c_output_stream;



----------------------------------------------------------------------------------------------------
class private abstract c_stream_reader = 
----------------------------------------------------------------------------------------------------
  ------------------------------------------------------------------------------------------------
  virtual init_reader =
  ------------------------------------------------------------------------------------------------
  begin
    -- nastavim podrizeny stream
    _source:=source;
    _isinicialized:=true;
    end init_reader;


  
  ------------------------------------------------------------------------------------------------
  virtual is_eod =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    result:=_source^.is_eod;
    end is_eod;



  ------------------------------------------------------------------------------------------------
  virtual close =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _source^.close;
    end close;

  
  
  ------------------------------------------------------------------------------------------------
  virtual get_flow =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _source^.get_flow(bytes);
    end get_flow;



  ------------------------------------------------------------------------------------------------
  virtual set_optimal_packet_size =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _source^.set_optimal_packet_size(bytes);
    end set_optimal_packet_size;



  ------------------------------------------------------------------------------------------------
  virtual get_optimal_packet_size =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _source^.get_optimal_packet_size(bytes);
    end get_optimal_packet_size;

  
  
  ------------------------------------------------------------------------------------------------
  virtual set_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _source^.set_lazy_buffer(lazy);
    end set_lazy_buffer;



  ------------------------------------------------------------------------------------------------
  virtual get_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _source^.get_lazy_buffer(lazy);
    end get_lazy_buffer;
  end c_stream_reader;



----------------------------------------------------------------------------------------------------
class private abstract c_stream_writer =
----------------------------------------------------------------------------------------------------
  ------------------------------------------------------------------------------------------------
  virtual init_writer =
  ------------------------------------------------------------------------------------------------
  begin
    -- nastavim podrizeny stream
    _target:=target;
    _isinicialized:=true;
    end init_writer;



  ------------------------------------------------------------------------------------------------
  virtual is_reading =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    result:=_target^.is_reading;
    end is_reading;



  ------------------------------------------------------------------------------------------------
  virtual close =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.close;
    end close;

  
  
  ------------------------------------------------------------------------------------------------
  virtual flush =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.flush;
    end flush;

  
  
  ------------------------------------------------------------------------------------------------
  virtual get_flow =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.get_flow(bytes);
    end get_flow;



  ------------------------------------------------------------------------------------------------
  virtual set_optimal_packet_size =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.set_optimal_packet_size(bytes);
    end set_optimal_packet_size;



  ------------------------------------------------------------------------------------------------
  virtual get_optimal_packet_size =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.get_optimal_packet_size(bytes);
    end get_optimal_packet_size;



  ------------------------------------------------------------------------------------------------
  virtual set_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.set_lazy_buffer(lazy);
    end set_lazy_buffer;



  ------------------------------------------------------------------------------------------------
  virtual get_lazy_buffer =
  ------------------------------------------------------------------------------------------------
  begin
    -- zavolam metodu podrizeneho streamu
    _target^.get_lazy_buffer(lazy);
    end get_lazy_buffer;
  end c_stream_writer;
