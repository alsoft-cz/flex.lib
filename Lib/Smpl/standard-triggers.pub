----------------------------------------------------------------------------------------------------
module public triggers =
-- Flex Standard Library
-- Event triggers.
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

-- forward declarations
class abstract c_trigger;  type p_trigger           = ^class c_trigger;
class c_trigger_container; type p_trigger_container = ^class c_trigger_container;

type
  -- triggered event
  t_triggered_event= private t_tag {%%TODO(TAG) := t_triggered_event:tag};

  -- types of common events
  t_event_before   = t_triggered_event {%%TODO(TAG) := t_event_before:tag};
  t_event_after    = t_triggered_event {%%TODO(TAG) := t_event_after:tag};
  t_event_error    = t_triggered_event {%%TODO(TAG) := t_event_error:tag};

var
  -- common events
  event_before     : const t_event_before;
  event_after      : const t_event_after;
  event_error      : const t_event_error;

----------------------------------------------------------------------------------------------------
class abstract c_trigger =
-- Represents a related set of triggers executed upon specified events. 
--   Descendants shall override the [execute] virtual method to implement the actual behavior of 
-- triggered events.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT)} execute (
        event      : in {%%TODO(VIRTUAL)} t_triggered_event)
    -- Executes an action associated with the given event. The actual parameter [event] specifies
    -- the type of the event that is being triggered.
    ------------------------------------------------------------------------------------------------
    = begin
      raise feature_not_implemented;
      end execute;

    end c_trigger;



----------------------------------------------------------------------------------------------------
class public c_trigger_container = extend c_trigger;
-- Container of multiple sets of triggers, that shall be executed upon specified events.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static create_trigger (
        trigger    : in t_tag);
    -- Creates and registeres a new trigger of the [trigger] type.
    --   [trigger] shall refer to a descendant of the [c_trigger] class. When it refers to 
    -- [c_trigger_container], it represents a nested trigger container.
    ------------------------------------------------------------------------------------------------
    static register_trigger (
        trigger    : in p_trigger);
    -- Registeres the specified [trigger].
    ------------------------------------------------------------------------------------------------
    static unregister_trigger (
        trigger    : in p_trigger);
    -- Unregisteres the specified [trigger].
    ------------------------------------------------------------------------------------------------

  protected

    var
      -- list of registered triggers
      triggers     : {%%TODO(REF)}^string of record
          trigger  : p_trigger;                  -- the trigger itself
          release  : t_logical;                  -- trigger shall be discarded upon exit
          end record;

    end c_trigger_container;



----------------------------------------------------------------------------------------------------
class abstract c_policy = extend c_trigger;
-- Represents a related set of triggers executed upon specified events. The set of triggers is 
-- intended to form a behavior policy. 
--   Descendants shall override the [execute] virtual method to  enforce the actual policy.
----------------------------------------------------------------------------------------------------   
    end c_policy;



----------------------------------------------------------------------------------------------------
class abstract c_error_policy = extend c_policy;
-- Error handling policy class.
--   Descendants shall override the [execute] virtual method for the [t_event_error] event to enfore
-- the actual error handling policy.
----------------------------------------------------------------------------------------------------
    end c_error_policy;



end triggers;