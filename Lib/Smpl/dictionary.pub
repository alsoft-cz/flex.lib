----------------------------------------------------------------------------------------------------
module public dictionary =
-- Dictionary implementation
-- Flex Standard Library
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.classes.trees;

message
  dictionary_error;

-- dopředné deklarace
class abstract c_dictionary_key;  type p_dictionary_key           = ^class c_dictionary_key;
class c_dictionary;               type p_dictionary               = ^class c_dictionary;
class c_string_dictionary;        type p_string_dictionary        = ^class c_string_dictionary;
class c_string_string_dictionary; type p_string_string_dictionary = ^class c_string_string_dictionary;
class c_dictionary_value;         type p_dictionary_value         = ^class c_dictionary_value;

type
  -- výsledek porovnání klíčů
  t_key_compare_result = enum
      kct_equal;
      kct_bigger;
      kct_smaller;
      end enum for size use 4;

  t_dictionary_delete_mode = enum
      ddm_none;
      ddm_key;
      ddm_value;
      ddm_both;
      end enum;

----------------------------------------------------------------------------------------------------
class public abstract c_dictionary_key =
-- Obecný předek pro klíč do slovníku
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    virtual abstract compare (
        other      : p_dictionary_key)           -- porovnávaný klíč
        return t_key_compare_result;
    -- compares [this] and [other]
    ------------------------------------------------------------------------------------------------

    end c_dictionary_key;



----------------------------------------------------------------------------------------------------
class public c_dictionary_value =
-- Hodnota ukládaná do slovníku
----------------------------------------------------------------------------------------------------

    end c_dictionary_value;



----------------------------------------------------------------------------------------------------
class public c_dictionary =
-- Slovník - třída, která uchovává seznam dvojic klíč-hodnota 
-- a pro každý klíč umí efektivně najít hodnotu
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static insert_row (
        key        : in p_dictionary_key;        -- klíč
        value      : in p_dictionary_value);     -- hodnota
    -- Přidá do slovníku dvojici [key,item]
    -- Pokud už [key] ve slovníku existuje, vyvolá výjimku [dictionary_error]
    ------------------------------------------------------------------------------------------------
    static replace_or_insert_row (
        key        : in p_dictionary_key;        -- klíč
        value      : in p_dictionary_value);     -- hodnota
    ------------------------------------------------------------------------------------------------
    static delete_row (
        key        : in p_dictionary_key;        -- klíč
        what       : in t_dictionary_delete_mode:=ddm_both); -- co se má smazat
    -- Vymaže klíč a jeho hodnotu ze slovníku, klíč i jeho hodnotu uvolní z paměti.
    ------------------------------------------------------------------------------------------------
    static remove_row (
        key        : in p_dictionary_key);       -- klíč
    -- Vymaže klíč a jeho hodnotu ze slovníku, klíč a jeho hodnotu neuvolní z paměti.
    ------------------------------------------------------------------------------------------------
    static find_row (
        key        : in p_dictionary_key)        -- klíč
        return p_dictionary_value;
    -- Najde hodnotu klíče ve slovníku.
    ------------------------------------------------------------------------------------------------
    static delete_all (
        what       : in t_dictionary_delete_mode:=ddm_both); -- co se má smazat
    -- Vymaže všechny položky slovníku
    ------------------------------------------------------------------------------------------------
    static remove_all;
    -- Vyčistí slovník
    ------------------------------------------------------------------------------------------------
    static temporary_get_tree return p_binary_tree;
    -- Vrátí strom, %%TODO(XXX) zrušit
    ------------------------------------------------------------------------------------------------

    end c_dictionary;



----------------------------------------------------------------------------------------------------
class public c_string_dictionary = extend c_dictionary;
-- Slovník s řetězcovými klíči
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static insert_value (
        key        : in t_char32ustr;            -- klíč
        value      : in p_dictionary_value);     -- hodnota
    -- Přidá do slovníku dvojici [key,value]
    ------------------------------------------------------------------------------------------------
    static replace_or_insert_value (
        key        : in t_char32ustr;            -- klíč
        value      : in p_dictionary_value);     -- hodnota
    -- Přidá do slovníku dvojici [key,value]
    ------------------------------------------------------------------------------------------------
    static delete_value (
        key        : in t_char32ustr;            -- klíč
        what       : in t_dictionary_delete_mode:=ddm_key); -- co se má smazat
    -- Vymaže klíč a jeho hodnotu ze slovníku
    ------------------------------------------------------------------------------------------------
    static find_value (
        key        : in t_char32ustr)            -- klíč
        return p_dictionary_value;
    -- Najde hodnotu klíče ve slovníku
    ------------------------------------------------------------------------------------------------

    end c_string_dictionary;



----------------------------------------------------------------------------------------------------
class public c_string_string_dictionary = extend c_string_dictionary;
-- Slovník s řetězcovými klíči a řetězcovými hodnotami
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static insert (
        key        : in t_char32ustr;            -- klíč
        value      : in t_char32ustr);           -- hodnota
    -- Přidá do slovníku dvojici [key,item]
    ------------------------------------------------------------------------------------------------
    static replace_or_insert (
        key        : in t_char32ustr;            -- klíč
        value      : in t_char32ustr);           -- hodnota
    -- Přidá do slovníku dvojici [key,item]
    ------------------------------------------------------------------------------------------------
    static find (
        key        : in t_char32ustr)            -- klíč
        return t_char32str;
    -- Najde hodnotu klíče ve slovníku
    ------------------------------------------------------------------------------------------------
    static search (
        key        : in t_char32ustr;            -- klíč
        value      : out t_char32ustr)           -- hodnota klíče
        return t_logical;
    -- Najde hodnotu klíče ve slovníku, vrátí, zda byl klíč nalezen
    ------------------------------------------------------------------------------------------------
    static delete (
        key        : in t_char32ustr);           -- klíč
    -- Vymaže klíč a jeho hodnotu ze slovníku
    ------------------------------------------------------------------------------------------------

    end c_string_string_dictionary;



----------------------------------------------------------------------------------------------------
class public c_string_string_dictionary_iterator =
-- %%TODO(XXX) vymyslet hiearchii iterátorů, 
-- aby se tento iterátor mohl dědit od obecnějšího iterátoru.
-- Použití této třídy může zůstat stejné.
-- V zásadě je tato třída pouze dočasná.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static init (
        dictionary : in c_string_string_dictionary);  -- slovník
    -- Inicializuje iterátor
    ------------------------------------------------------------------------------------------------
    static get_value (
        key        : out t_char32ustr;           -- klíč
        value      : out t_char32ustr)           -- hotnota
        return t_logical;
    -- Vrátí dvojici klíč - hodnota, posune na další prvek slovníku, vrátí T, pokud byly zapsány
    -- nějaké hodnoty do [key],[value]
    ------------------------------------------------------------------------------------------------
    static reset;
    -- Vyresetuje iterátor
    ------------------------------------------------------------------------------------------------

    end c_string_string_dictionary_iterator;

end dictionary;
