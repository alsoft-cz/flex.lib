----------------------------------------------------------------------------------------------------
module transformers =
-- Types and classes for characters transforming.
-- Flex Standard Multi-Platform Library
-- Copyright (C) 1999-2004 A && L soft
----------------------------------------------------------------------------------------------------

-- forward declarations
class abstract c_character_transformer; type p_character_transformer = ^class c_character_transformer;

----------------------------------------------------------------------------------------------------
class abstract c_character_transformer =
-- This is the base class for transforming characters. Is translates single T_CHAR32 to another 
-- T_CHAR32. Both source and result may be precomposed or composite. It is expected, that derived 
-- class will have private buffer for storing single characters (i.e. buffer for transforming
-- between unicode normalization forms will have about 20 characters long. 
----------------------------------------------------------------------------------------------------

    message
      -- general character-transformer error exception
      character_transformer_error extend character_error;

      -- raised when it's impossible to insert another character into a buffer
      character_transformer_buffer_full_error extend character_transformer_error;

      -- raised when it's impossible to get a character from a buffer
      character_transformer_buffer_empty_error extend character_transformer_error;

    ------------------------------------------------------------------------------------------------
    virtual abstract put_character (
        c          : in t_char32;                -- inserted character
        output_ready: out t_logical);            -- character completed flag
    -- Put one base or combining character [c] into internal buffer. The function sets output
    -- parameter [output_ready] to true when character is completed and is ready for 
    -- [get_character]. If there is a complete character in a buffer before inserting this 
    -- character, fuction raises [character_transformer_buffer_full_error] exception.
    ------------------------------------------------------------------------------------------------
    virtual abstract get_character (
        c          : out t_char32;               -- output character
        more_output: out t_logical);             -- whole character wasn't picked up yet
    -- Get another base or combining character [c] from internal buffer. Function sets parameter 
    -- [more_output] to true when whole character wasn't read yet, and object have prepared more 
    -- combining characters. If function sets [more_output] to flase, internal buffer is ready for 
    -- another [put_character] operation. If buffer is empty or contains only unfinished character 
    -- on calling this function, it raises [character_transformer_buffer_empty_error] exception.
    ------------------------------------------------------------------------------------------------
    virtual abstract finalize_input return t_logical;
    -- Finalizes input. Tells the transformer, that the last inserted character was the last one of
    -- a combining character sequence. [result] true means than another character is prepared
    -- for [get_character]. If there is a complete character in a buffer before finalizing,
    -- fuction raises [character_transformer_buffer_full_error] exception.
    ------------------------------------------------------------------------------------------------

    end c_character_transformer;

end transformers;