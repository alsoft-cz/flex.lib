#option hint(all,false);
#option warning(all,false);

program url_test = 

with
  standard,
  standard.console,
  standard.conversions,
  standard.classes,
  standard.classes.lists,
  standard.classes.dictionaries,
  standard.names,
  advanced.namespaces.uri;

----------------------------------------------------------------------------------------------------
-- TESTS -------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

procedure test(
    src_name       : in t_text_name;
    name_type      : in t_name_type) =

  --------------------------------------------------------------------------------------------------
  procedure list_all (
      names          : in c_list) =
  -- Lists all name components in a collection
  --------------------------------------------------------------------------------------------------

  --------------------------------------------------------------------------------------------------
  procedure print_subcomponents (
      subcomponents  : in c_list) =
  -- Lists all name components in a collection
  --------------------------------------------------------------------------------------------------
var
  iterator         : c_list_iterator;
  subc             : p_name_subcomponent;

begin   
  -- prepare an iterator
  iterator.init(subcomponents,tlwd_forward);

  -- output all names provided by the given iterator
  while iterator.get(p_item(subc)) loop
    write_line(subc^.name^);
    end loop;
  end print_subcomponents;


var
  iterator         : c_list_iterator;
  name             : p_name_component;
  text_name        : p_text_name;

begin   
  -- prepare an iterator
  iterator.init(p_list(^names)^,tlwd_forward);

  -- output all names provided by the given iterator
  while iterator.get(p_item(name)) loop
    print_subcomponents(name^.subcomponents);
    write_line(' ---');
    end loop;
  end list_all;

var
  name       : p_name;
  valid      : t_logical;
  text_name  : p_text_name;
  cn         : p_name;

begin
    write_line(src_name);
    write('--- ');
    case name_type
      when tnt_unspecified do write('unspecified');
      when tnt_relative do write('relative');
      when tnt_absolute do write('absolute');
      when others do write('another');
      end case;
    write(' ');
    valid := namespace_uri^.check_name(src_name);
    if valid
    then
      begin
        write_line('--- valid');
        namespace_uri^.decompose_name(src_name, name, name_type);
        list_all(name^.components);
        write('--- recomposed: ');
        begin
          name^.compose_name(text_name);
          write_line(text_name^);
        leave
          discard text_name;
          end;

        if p_uri_name(name)^.is_normalized
          then write_line('(normal)');
          else write_linE('(NOT NORMAL)');
          end if;

        write_line('***cloned***');

        cn := name^.clone;
        begin
          list_all(cn^.components);
          write('--- recomposed: ');
          begin
            cn^.compose_name(text_name);
            write_line(text_name^);
          leave
            discard text_name;
            end;
        leave
          discard cn;
          end;
      
      leave
        discard name;
        end;
    else
      write_line('--- invalid');
      end if;
  end test;

var
  uri : c_namespace_uri;
  dict : c_string_string_dictionary;
  iter : c_string_string_dictionary_iterator;
  key : t_char32lstr;
  value: t_char32lstr;

begin
  test('abcd', tnt_unspecified);
  test('/', tnt_unspecified);
  test('http://www.example.com/path/%2E%2E/somewhere.txt/', tnt_unspecified);
  test('http://www.example.com/path/%2E%2E/somewhere.txt', tnt_unspecified);
  test('http://user:password@www.example.com:2221/path/say%20thing?what=hello+world&lang=us#part3%00', tnt_unspecified);
  test('../relative/file', tnt_unspecified);
  test('/etc/passwd', tnt_unspecified);
  test('hey, joe, how are you?', tnt_unspecified);
  test('c:\folder\subfolder\file.txt', tnt_unspecified);
  end url_test;
